#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTHStore.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DTHStore")]
	public partial class dbCsgoStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Insertaccount_orderdetail(account_orderdetail instance);
    partial void Updateaccount_orderdetail(account_orderdetail instance);
    partial void Deleteaccount_orderdetail(account_orderdetail instance);
    partial void Insertaccount_orderHistory(account_orderHistory instance);
    partial void Updateaccount_orderHistory(account_orderHistory instance);
    partial void Deleteaccount_orderHistory(account_orderHistory instance);
    partial void Insertaccount_order(account_order instance);
    partial void Updateaccount_order(account_order instance);
    partial void Deleteaccount_order(account_order instance);
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void InsertApplicationForm(ApplicationForm instance);
    partial void UpdateApplicationForm(ApplicationForm instance);
    partial void DeleteApplicationForm(ApplicationForm instance);
    partial void Insertcomment(comment instance);
    partial void Updatecomment(comment instance);
    partial void Deletecomment(comment instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertorderdetail(orderdetail instance);
    partial void Updateorderdetail(orderdetail instance);
    partial void Deleteorderdetail(orderdetail instance);
    partial void InsertOrderHistory(OrderHistory instance);
    partial void UpdateOrderHistory(OrderHistory instance);
    partial void DeleteOrderHistory(OrderHistory instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertpublisher(publisher instance);
    partial void Updatepublisher(publisher instance);
    partial void Deletepublisher(publisher instance);
    partial void Insertskin(skin instance);
    partial void Updateskin(skin instance);
    partial void Deleteskin(skin instance);
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Inserttalk(talk instance);
    partial void Updatetalk(talk instance);
    partial void Deletetalk(talk instance);
    partial void Insertteam(team instance);
    partial void Updateteam(team instance);
    partial void Deleteteam(team instance);
    partial void Inserttournament(tournament instance);
    partial void Updatetournament(tournament instance);
    partial void Deletetournament(tournament instance);
    partial void Inserttournament_team(tournament_team instance);
    partial void Updatetournament_team(tournament_team instance);
    partial void Deletetournament_team(tournament_team instance);
    partial void Inserttournament_vote(tournament_vote instance);
    partial void Updatetournament_vote(tournament_vote instance);
    partial void Deletetournament_vote(tournament_vote instance);
    partial void InsertTrainingOrder(TrainingOrder instance);
    partial void UpdateTrainingOrder(TrainingOrder instance);
    partial void DeleteTrainingOrder(TrainingOrder instance);
    partial void InsertTrainingRoom(TrainingRoom instance);
    partial void UpdateTrainingRoom(TrainingRoom instance);
    partial void DeleteTrainingRoom(TrainingRoom instance);
    partial void InsertTrainingSession(TrainingSession instance);
    partial void UpdateTrainingSession(TrainingSession instance);
    partial void DeleteTrainingSession(TrainingSession instance);
    partial void Insertweapon(weapon instance);
    partial void Updateweapon(weapon instance);
    partial void Deleteweapon(weapon instance);
    #endregion
		
		public dbCsgoStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCsgoStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCsgoStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbCsgoStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<account_orderdetail> account_orderdetails
		{
			get
			{
				return this.GetTable<account_orderdetail>();
			}
		}
		
		public System.Data.Linq.Table<account_orderHistory> account_orderHistories
		{
			get
			{
				return this.GetTable<account_orderHistory>();
			}
		}
		
		public System.Data.Linq.Table<account_order> account_orders
		{
			get
			{
				return this.GetTable<account_order>();
			}
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationForm> ApplicationForms
		{
			get
			{
				return this.GetTable<ApplicationForm>();
			}
		}
		
		public System.Data.Linq.Table<comment> comments
		{
			get
			{
				return this.GetTable<comment>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<orderdetail> orderdetails
		{
			get
			{
				return this.GetTable<orderdetail>();
			}
		}
		
		public System.Data.Linq.Table<OrderHistory> OrderHistories
		{
			get
			{
				return this.GetTable<OrderHistory>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<publisher> publishers
		{
			get
			{
				return this.GetTable<publisher>();
			}
		}
		
		public System.Data.Linq.Table<skin> skins
		{
			get
			{
				return this.GetTable<skin>();
			}
		}
		
		public System.Data.Linq.Table<review> reviews
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<talk> talks
		{
			get
			{
				return this.GetTable<talk>();
			}
		}
		
		public System.Data.Linq.Table<team> teams
		{
			get
			{
				return this.GetTable<team>();
			}
		}
		
		public System.Data.Linq.Table<tournament> tournaments
		{
			get
			{
				return this.GetTable<tournament>();
			}
		}
		
		public System.Data.Linq.Table<tournament_team> tournament_teams
		{
			get
			{
				return this.GetTable<tournament_team>();
			}
		}
		
		public System.Data.Linq.Table<tournament_vote> tournament_votes
		{
			get
			{
				return this.GetTable<tournament_vote>();
			}
		}
		
		public System.Data.Linq.Table<TrainingOrder> TrainingOrders
		{
			get
			{
				return this.GetTable<TrainingOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrainingRoom> TrainingRooms
		{
			get
			{
				return this.GetTable<TrainingRoom>();
			}
		}
		
		public System.Data.Linq.Table<TrainingSession> TrainingSessions
		{
			get
			{
				return this.GetTable<TrainingSession>();
			}
		}
		
		public System.Data.Linq.Table<weapon> weapons
		{
			get
			{
				return this.GetTable<weapon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _account_id;
		
		private int _customer_id;
		
		private string _game_name;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _rental_start;
		
		private System.DateTime _rental_end;
		
		private decimal _price_per_day;
		
		private System.Nullable<decimal> _total_price;
		
		private System.Nullable<bool> _is_active;
		
		private string _image_account;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_idChanging(int value);
    partial void Onaccount_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Ongame_nameChanging(string value);
    partial void Ongame_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onrental_startChanging(System.Nullable<System.DateTime> value);
    partial void Onrental_startChanged();
    partial void Onrental_endChanging(System.DateTime value);
    partial void Onrental_endChanged();
    partial void Onprice_per_dayChanging(decimal value);
    partial void Onprice_per_dayChanged();
    partial void Ontotal_priceChanging(System.Nullable<decimal> value);
    partial void Ontotal_priceChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onimage_accountChanging(string value);
    partial void Onimage_accountChanged();
    #endregion
		
		public account()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int account_id
		{
			get
			{
				return this._account_id;
			}
			set
			{
				if ((this._account_id != value))
				{
					this.Onaccount_idChanging(value);
					this.SendPropertyChanging();
					this._account_id = value;
					this.SendPropertyChanged("account_id");
					this.Onaccount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string game_name
		{
			get
			{
				return this._game_name;
			}
			set
			{
				if ((this._game_name != value))
				{
					this.Ongame_nameChanging(value);
					this.SendPropertyChanging();
					this._game_name = value;
					this.SendPropertyChanged("game_name");
					this.Ongame_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rental_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> rental_start
		{
			get
			{
				return this._rental_start;
			}
			set
			{
				if ((this._rental_start != value))
				{
					this.Onrental_startChanging(value);
					this.SendPropertyChanging();
					this._rental_start = value;
					this.SendPropertyChanged("rental_start");
					this.Onrental_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rental_end", DbType="DateTime NOT NULL")]
		public System.DateTime rental_end
		{
			get
			{
				return this._rental_end;
			}
			set
			{
				if ((this._rental_end != value))
				{
					this.Onrental_endChanging(value);
					this.SendPropertyChanging();
					this._rental_end = value;
					this.SendPropertyChanged("rental_end");
					this.Onrental_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_per_day", DbType="Decimal(10,2) NOT NULL")]
		public decimal price_per_day
		{
			get
			{
				return this._price_per_day;
			}
			set
			{
				if ((this._price_per_day != value))
				{
					this.Onprice_per_dayChanging(value);
					this.SendPropertyChanging();
					this._price_per_day = value;
					this.SendPropertyChanged("price_per_day");
					this.Onprice_per_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", AutoSync=AutoSync.Always, DbType="Decimal(21,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_account", DbType="VarChar(255)")]
		public string image_account
		{
			get
			{
				return this._image_account;
			}
			set
			{
				if ((this._image_account != value))
				{
					this.Onimage_accountChanging(value);
					this.SendPropertyChanging();
					this._image_account = value;
					this.SendPropertyChanged("image_account");
					this.Onimage_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.accounts.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.accounts.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account_orderdetails")]
	public partial class account_orderdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _account_orderdetail_id;
		
		private int _account_order_id;
		
		private int _rental_duration;
		
		private decimal _total_price;
		
		private EntityRef<account_order> _account_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_orderdetail_idChanging(int value);
    partial void Onaccount_orderdetail_idChanged();
    partial void Onaccount_order_idChanging(int value);
    partial void Onaccount_order_idChanged();
    partial void Onrental_durationChanging(int value);
    partial void Onrental_durationChanged();
    partial void Ontotal_priceChanging(decimal value);
    partial void Ontotal_priceChanged();
    #endregion
		
		public account_orderdetail()
		{
			this._account_order = default(EntityRef<account_order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_orderdetail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int account_orderdetail_id
		{
			get
			{
				return this._account_orderdetail_id;
			}
			set
			{
				if ((this._account_orderdetail_id != value))
				{
					this.Onaccount_orderdetail_idChanging(value);
					this.SendPropertyChanging();
					this._account_orderdetail_id = value;
					this.SendPropertyChanged("account_orderdetail_id");
					this.Onaccount_orderdetail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_order_id", DbType="Int NOT NULL")]
		public int account_order_id
		{
			get
			{
				return this._account_order_id;
			}
			set
			{
				if ((this._account_order_id != value))
				{
					if (this._account_order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_order_idChanging(value);
					this.SendPropertyChanging();
					this._account_order_id = value;
					this.SendPropertyChanged("account_order_id");
					this.Onaccount_order_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rental_duration", DbType="Int NOT NULL")]
		public int rental_duration
		{
			get
			{
				return this._rental_duration;
			}
			set
			{
				if ((this._rental_duration != value))
				{
					this.Onrental_durationChanging(value);
					this.SendPropertyChanging();
					this._rental_duration = value;
					this.SendPropertyChanged("rental_duration");
					this.Onrental_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_order_account_orderdetail", Storage="_account_order", ThisKey="account_order_id", OtherKey="account_order_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public account_order account_order
		{
			get
			{
				return this._account_order.Entity;
			}
			set
			{
				account_order previousValue = this._account_order.Entity;
				if (((previousValue != value) 
							|| (this._account_order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account_order.Entity = null;
						previousValue.account_orderdetails.Remove(this);
					}
					this._account_order.Entity = value;
					if ((value != null))
					{
						value.account_orderdetails.Add(this);
						this._account_order_id = value.account_order_id;
					}
					else
					{
						this._account_order_id = default(int);
					}
					this.SendPropertyChanged("account_order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account_orderHistory")]
	public partial class account_orderHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _history_id;
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _customer_email;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private decimal _total_price;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhistory_idChanging(int value);
    partial void Onhistory_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void Oncustomer_emailChanging(string value);
    partial void Oncustomer_emailChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Ontotal_priceChanging(decimal value);
    partial void Ontotal_priceChanged();
    #endregion
		
		public account_orderHistory()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_history_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int history_id
		{
			get
			{
				return this._history_id;
			}
			set
			{
				if ((this._history_id != value))
				{
					this.Onhistory_idChanging(value);
					this.SendPropertyChanging();
					this._history_id = value;
					this.SendPropertyChanged("history_id");
					this.Onhistory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string customer_email
		{
			get
			{
				return this._customer_email;
			}
			set
			{
				if ((this._customer_email != value))
				{
					this.Oncustomer_emailChanging(value);
					this.SendPropertyChanging();
					this._customer_email = value;
					this.SendPropertyChanged("customer_email");
					this.Oncustomer_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account_orderHistory", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.account_orderHistories.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.account_orderHistories.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account_orders")]
	public partial class account_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _account_order_id;
		
		private int _customer_id;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<decimal> _total_amount;
		
		private System.Nullable<bool> _is_paid;
		
		private EntitySet<account_orderdetail> _account_orderdetails;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount_order_idChanging(int value);
    partial void Onaccount_order_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Ontotal_amountChanging(System.Nullable<decimal> value);
    partial void Ontotal_amountChanged();
    partial void Onis_paidChanging(System.Nullable<bool> value);
    partial void Onis_paidChanged();
    #endregion
		
		public account_order()
		{
			this._account_orderdetails = new EntitySet<account_orderdetail>(new Action<account_orderdetail>(this.attach_account_orderdetails), new Action<account_orderdetail>(this.detach_account_orderdetails));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int account_order_id
		{
			get
			{
				return this._account_order_id;
			}
			set
			{
				if ((this._account_order_id != value))
				{
					this.Onaccount_order_idChanging(value);
					this.SendPropertyChanging();
					this._account_order_id = value;
					this.SendPropertyChanged("account_order_id");
					this.Onaccount_order_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit")]
		public System.Nullable<bool> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_order_account_orderdetail", Storage="_account_orderdetails", ThisKey="account_order_id", OtherKey="account_order_id")]
		public EntitySet<account_orderdetail> account_orderdetails
		{
			get
			{
				return this._account_orderdetails;
			}
			set
			{
				this._account_orderdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.account_orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.account_orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_account_orderdetails(account_orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.account_order = this;
		}
		
		private void detach_account_orderdetails(account_orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.account_order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admins")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _admin_id;
		
		private string _admin_name;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<decimal> _price_per_hour;
		
		private string _specialization;
		
		private string _admin_image;
		
		private System.Nullable<bool> _is_online;
		
		private EntitySet<customer> _customers;
		
		private EntitySet<orderdetail> _orderdetails;
		
		private EntitySet<OrderHistory> _OrderHistories;
		
		private EntitySet<TrainingOrder> _TrainingOrders;
		
		private EntitySet<TrainingSession> _TrainingSessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_idChanging(int value);
    partial void Onadmin_idChanged();
    partial void Onadmin_nameChanging(string value);
    partial void Onadmin_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onprice_per_hourChanging(System.Nullable<decimal> value);
    partial void Onprice_per_hourChanged();
    partial void OnspecializationChanging(string value);
    partial void OnspecializationChanged();
    partial void Onadmin_imageChanging(string value);
    partial void Onadmin_imageChanged();
    partial void Onis_onlineChanging(System.Nullable<bool> value);
    partial void Onis_onlineChanged();
    #endregion
		
		public admin()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			this._orderdetails = new EntitySet<orderdetail>(new Action<orderdetail>(this.attach_orderdetails), new Action<orderdetail>(this.detach_orderdetails));
			this._OrderHistories = new EntitySet<OrderHistory>(new Action<OrderHistory>(this.attach_OrderHistories), new Action<OrderHistory>(this.detach_OrderHistories));
			this._TrainingOrders = new EntitySet<TrainingOrder>(new Action<TrainingOrder>(this.attach_TrainingOrders), new Action<TrainingOrder>(this.detach_TrainingOrders));
			this._TrainingSessions = new EntitySet<TrainingSession>(new Action<TrainingSession>(this.attach_TrainingSessions), new Action<TrainingSession>(this.detach_TrainingSessions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_name", DbType="NVarChar(50)")]
		public string admin_name
		{
			get
			{
				return this._admin_name;
			}
			set
			{
				if ((this._admin_name != value))
				{
					this.Onadmin_nameChanging(value);
					this.SendPropertyChanging();
					this._admin_name = value;
					this.SendPropertyChanged("admin_name");
					this.Onadmin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_per_hour", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price_per_hour
		{
			get
			{
				return this._price_per_hour;
			}
			set
			{
				if ((this._price_per_hour != value))
				{
					this.Onprice_per_hourChanging(value);
					this.SendPropertyChanging();
					this._price_per_hour = value;
					this.SendPropertyChanged("price_per_hour");
					this.Onprice_per_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialization", DbType="NVarChar(100)")]
		public string specialization
		{
			get
			{
				return this._specialization;
			}
			set
			{
				if ((this._specialization != value))
				{
					this.OnspecializationChanging(value);
					this.SendPropertyChanging();
					this._specialization = value;
					this.SendPropertyChanged("specialization");
					this.OnspecializationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_image", DbType="VarChar(255)")]
		public string admin_image
		{
			get
			{
				return this._admin_image;
			}
			set
			{
				if ((this._admin_image != value))
				{
					this.Onadmin_imageChanging(value);
					this.SendPropertyChanging();
					this._admin_image = value;
					this.SendPropertyChanged("admin_image");
					this.Onadmin_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_online", DbType="Bit")]
		public System.Nullable<bool> is_online
		{
			get
			{
				return this._is_online;
			}
			set
			{
				if ((this._is_online != value))
				{
					this.Onis_onlineChanging(value);
					this.SendPropertyChanging();
					this._is_online = value;
					this.SendPropertyChanged("is_online");
					this.Onis_onlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_customer", Storage="_customers", ThisKey="admin_id", OtherKey="selected_trainer_id")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_orderdetail", Storage="_orderdetails", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<orderdetail> orderdetails
		{
			get
			{
				return this._orderdetails;
			}
			set
			{
				this._orderdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_OrderHistory", Storage="_OrderHistories", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<OrderHistory> OrderHistories
		{
			get
			{
				return this._OrderHistories;
			}
			set
			{
				this._OrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_TrainingOrder", Storage="_TrainingOrders", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<TrainingOrder> TrainingOrders
		{
			get
			{
				return this._TrainingOrders;
			}
			set
			{
				this._TrainingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_TrainingSession", Storage="_TrainingSessions", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<TrainingSession> TrainingSessions
		{
			get
			{
				return this._TrainingSessions;
			}
			set
			{
				this._TrainingSessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_TrainingOrders(TrainingOrder entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_TrainingOrders(TrainingOrder entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
		
		private void attach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationForms")]
	public partial class ApplicationForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ApplicationForms;
		
		private System.Nullable<int> _UserId;
		
		private string _Position;
		
		private string _Degree;
		
		private string _Introduction;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ApplicationFormsChanging(int value);
    partial void OnId_ApplicationFormsChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnIntroductionChanging(string value);
    partial void OnIntroductionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public ApplicationForm()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ApplicationForms", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ApplicationForms
		{
			get
			{
				return this._Id_ApplicationForms;
			}
			set
			{
				if ((this._Id_ApplicationForms != value))
				{
					this.OnId_ApplicationFormsChanging(value);
					this.SendPropertyChanging();
					this._Id_ApplicationForms = value;
					this.SendPropertyChanged("Id_ApplicationForms");
					this.OnId_ApplicationFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(255)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduction", DbType="NVarChar(MAX)")]
		public string Introduction
		{
			get
			{
				return this._Introduction;
			}
			set
			{
				if ((this._Introduction != value))
				{
					this.OnIntroductionChanging(value);
					this.SendPropertyChanging();
					this._Introduction = value;
					this.SendPropertyChanged("Introduction");
					this.OnIntroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_ApplicationForm", Storage="_customer", ThisKey="UserId", OtherKey="customer_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.ApplicationForms.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.ApplicationForms.Add(this);
						this._UserId = value.customer_id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _comment_id;
		
		private int _review_id;
		
		private int _customer_id;
		
		private string _comment_text;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<review> _review;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_idChanging(int value);
    partial void Oncomment_idChanged();
    partial void Onreview_idChanging(int value);
    partial void Onreview_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncomment_textChanging(string value);
    partial void Oncomment_textChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    #endregion
		
		public comment()
		{
			this._customer = default(EntityRef<customer>);
			this._review = default(EntityRef<review>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int comment_id
		{
			get
			{
				return this._comment_id;
			}
			set
			{
				if ((this._comment_id != value))
				{
					this.Oncomment_idChanging(value);
					this.SendPropertyChanging();
					this._comment_id = value;
					this.SendPropertyChanged("comment_id");
					this.Oncomment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", DbType="Int NOT NULL")]
		public int review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					if (this._review.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string comment_text
		{
			get
			{
				return this._comment_text;
			}
			set
			{
				if ((this._comment_text != value))
				{
					this.Oncomment_textChanging(value);
					this.SendPropertyChanging();
					this._comment_text = value;
					this.SendPropertyChanged("comment_text");
					this.Oncomment_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_comment", Storage="_review", ThisKey="review_id", OtherKey="review_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public review review
		{
			get
			{
				return this._review.Entity;
			}
			set
			{
				review previousValue = this._review.Entity;
				if (((previousValue != value) 
							|| (this._review.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._review.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._review.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._review_id = value.review_id;
					}
					else
					{
						this._review_id = default(int);
					}
					this.SendPropertyChanged("review");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _address;
		
		private string _numberphone;
		
		private System.Nullable<System.DateTime> _dob;
		
		private System.Nullable<decimal> _customers_price;
		
		private System.Nullable<int> _selected_trainer_id;
		
		private System.Nullable<System.DateTime> _training_schedule;
		
		private System.Nullable<decimal> _total_training_cost;
		
		private System.Nullable<bool> _is_training_active;
		
		private EntitySet<account> _accounts;
		
		private EntitySet<account_orderHistory> _account_orderHistories;
		
		private EntitySet<account_order> _account_orders;
		
		private EntitySet<ApplicationForm> _ApplicationForms;
		
		private EntitySet<comment> _comments;
		
		private EntitySet<OrderHistory> _OrderHistories;
		
		private EntitySet<order> _orders;
		
		private EntitySet<review> _reviews;
		
		private EntitySet<tournament_vote> _tournament_votes;
		
		private EntitySet<TrainingOrder> _TrainingOrders;
		
		private EntitySet<TrainingSession> _TrainingSessions;
		
		private EntityRef<admin> _admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnumberphoneChanging(string value);
    partial void OnnumberphoneChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void Oncustomers_priceChanging(System.Nullable<decimal> value);
    partial void Oncustomers_priceChanged();
    partial void Onselected_trainer_idChanging(System.Nullable<int> value);
    partial void Onselected_trainer_idChanged();
    partial void Ontraining_scheduleChanging(System.Nullable<System.DateTime> value);
    partial void Ontraining_scheduleChanged();
    partial void Ontotal_training_costChanging(System.Nullable<decimal> value);
    partial void Ontotal_training_costChanged();
    partial void Onis_training_activeChanging(System.Nullable<bool> value);
    partial void Onis_training_activeChanged();
    #endregion
		
		public customer()
		{
			this._accounts = new EntitySet<account>(new Action<account>(this.attach_accounts), new Action<account>(this.detach_accounts));
			this._account_orderHistories = new EntitySet<account_orderHistory>(new Action<account_orderHistory>(this.attach_account_orderHistories), new Action<account_orderHistory>(this.detach_account_orderHistories));
			this._account_orders = new EntitySet<account_order>(new Action<account_order>(this.attach_account_orders), new Action<account_order>(this.detach_account_orders));
			this._ApplicationForms = new EntitySet<ApplicationForm>(new Action<ApplicationForm>(this.attach_ApplicationForms), new Action<ApplicationForm>(this.detach_ApplicationForms));
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._OrderHistories = new EntitySet<OrderHistory>(new Action<OrderHistory>(this.attach_OrderHistories), new Action<OrderHistory>(this.detach_OrderHistories));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			this._tournament_votes = new EntitySet<tournament_vote>(new Action<tournament_vote>(this.attach_tournament_votes), new Action<tournament_vote>(this.detach_tournament_votes));
			this._TrainingOrders = new EntitySet<TrainingOrder>(new Action<TrainingOrder>(this.attach_TrainingOrders), new Action<TrainingOrder>(this.detach_TrainingOrders));
			this._TrainingSessions = new EntitySet<TrainingSession>(new Action<TrainingSession>(this.attach_TrainingSessions), new Action<TrainingSession>(this.detach_TrainingSessions));
			this._admin = default(EntityRef<admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(50)")]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberphone", DbType="VarChar(30)")]
		public string numberphone
		{
			get
			{
				return this._numberphone;
			}
			set
			{
				if ((this._numberphone != value))
				{
					this.OnnumberphoneChanging(value);
					this.SendPropertyChanging();
					this._numberphone = value;
					this.SendPropertyChanged("numberphone");
					this.OnnumberphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customers_price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> customers_price
		{
			get
			{
				return this._customers_price;
			}
			set
			{
				if ((this._customers_price != value))
				{
					this.Oncustomers_priceChanging(value);
					this.SendPropertyChanging();
					this._customers_price = value;
					this.SendPropertyChanged("customers_price");
					this.Oncustomers_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selected_trainer_id", DbType="Int")]
		public System.Nullable<int> selected_trainer_id
		{
			get
			{
				return this._selected_trainer_id;
			}
			set
			{
				if ((this._selected_trainer_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onselected_trainer_idChanging(value);
					this.SendPropertyChanging();
					this._selected_trainer_id = value;
					this.SendPropertyChanged("selected_trainer_id");
					this.Onselected_trainer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_schedule", DbType="DateTime")]
		public System.Nullable<System.DateTime> training_schedule
		{
			get
			{
				return this._training_schedule;
			}
			set
			{
				if ((this._training_schedule != value))
				{
					this.Ontraining_scheduleChanging(value);
					this.SendPropertyChanging();
					this._training_schedule = value;
					this.SendPropertyChanged("training_schedule");
					this.Ontraining_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_training_cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_training_cost
		{
			get
			{
				return this._total_training_cost;
			}
			set
			{
				if ((this._total_training_cost != value))
				{
					this.Ontotal_training_costChanging(value);
					this.SendPropertyChanging();
					this._total_training_cost = value;
					this.SendPropertyChanged("total_training_cost");
					this.Ontotal_training_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_training_active", DbType="Bit")]
		public System.Nullable<bool> is_training_active
		{
			get
			{
				return this._is_training_active;
			}
			set
			{
				if ((this._is_training_active != value))
				{
					this.Onis_training_activeChanging(value);
					this.SendPropertyChanging();
					this._is_training_active = value;
					this.SendPropertyChanged("is_training_active");
					this.Onis_training_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account", Storage="_accounts", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<account> accounts
		{
			get
			{
				return this._accounts;
			}
			set
			{
				this._accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account_orderHistory", Storage="_account_orderHistories", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<account_orderHistory> account_orderHistories
		{
			get
			{
				return this._account_orderHistories;
			}
			set
			{
				this._account_orderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_account_order", Storage="_account_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<account_order> account_orders
		{
			get
			{
				return this._account_orders;
			}
			set
			{
				this._account_orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_ApplicationForm", Storage="_ApplicationForms", ThisKey="customer_id", OtherKey="UserId")]
		public EntitySet<ApplicationForm> ApplicationForms
		{
			get
			{
				return this._ApplicationForms;
			}
			set
			{
				this._ApplicationForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_comment", Storage="_comments", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_OrderHistory", Storage="_OrderHistories", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<OrderHistory> OrderHistories
		{
			get
			{
				return this._OrderHistories;
			}
			set
			{
				this._OrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_reviews", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_tournament_vote", Storage="_tournament_votes", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<tournament_vote> tournament_votes
		{
			get
			{
				return this._tournament_votes;
			}
			set
			{
				this._tournament_votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_TrainingOrder", Storage="_TrainingOrders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<TrainingOrder> TrainingOrders
		{
			get
			{
				return this._TrainingOrders;
			}
			set
			{
				this._TrainingOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_TrainingSession", Storage="_TrainingSessions", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<TrainingSession> TrainingSessions
		{
			get
			{
				return this._TrainingSessions;
			}
			set
			{
				this._TrainingSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_customer", Storage="_admin", ThisKey="selected_trainer_id", OtherKey="admin_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._selected_trainer_id = value.admin_id;
					}
					else
					{
						this._selected_trainer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_accounts(account entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_accounts(account entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_account_orderHistories(account_orderHistory entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_account_orderHistories(account_orderHistory entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_account_orders(account_order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_account_orders(account_order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_ApplicationForms(ApplicationForm entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_ApplicationForms(ApplicationForm entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_tournament_votes(tournament_vote entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_tournament_votes(tournament_vote entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_TrainingOrders(TrainingOrder entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_TrainingOrders(TrainingOrder entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderdetails")]
	public partial class orderdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderdetail_id;
		
		private System.Nullable<int> _order_id;
		
		private System.Nullable<int> _admin_id;
		
		private int _training_hours;
		
		private decimal _price_per_hour;
		
		private System.Nullable<decimal> _total_price;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorderdetail_idChanging(int value);
    partial void Onorderdetail_idChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Onadmin_idChanging(System.Nullable<int> value);
    partial void Onadmin_idChanged();
    partial void Ontraining_hoursChanging(int value);
    partial void Ontraining_hoursChanged();
    partial void Onprice_per_hourChanging(decimal value);
    partial void Onprice_per_hourChanged();
    partial void Ontotal_priceChanging(System.Nullable<decimal> value);
    partial void Ontotal_priceChanged();
    #endregion
		
		public orderdetail()
		{
			this._admin = default(EntityRef<admin>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderdetail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderdetail_id
		{
			get
			{
				return this._orderdetail_id;
			}
			set
			{
				if ((this._orderdetail_id != value))
				{
					this.Onorderdetail_idChanging(value);
					this.SendPropertyChanging();
					this._orderdetail_id = value;
					this.SendPropertyChanged("orderdetail_id");
					this.Onorderdetail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
		public System.Nullable<int> order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="Int")]
		public System.Nullable<int> admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_hours", DbType="Int NOT NULL")]
		public int training_hours
		{
			get
			{
				return this._training_hours;
			}
			set
			{
				if ((this._training_hours != value))
				{
					this.Ontraining_hoursChanging(value);
					this.SendPropertyChanging();
					this._training_hours = value;
					this.SendPropertyChanged("training_hours");
					this.Ontraining_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_per_hour", DbType="Decimal(18,2) NOT NULL")]
		public decimal price_per_hour
		{
			get
			{
				return this._price_per_hour;
			}
			set
			{
				if ((this._price_per_hour != value))
				{
					this.Onprice_per_hourChanging(value);
					this.SendPropertyChanging();
					this._price_per_hour = value;
					this.SendPropertyChanged("price_per_hour");
					this.Onprice_per_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", AutoSync=AutoSync.Always, DbType="Decimal(29,2)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_orderdetail", Storage="_admin", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.orderdetails.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.orderdetails.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.orderdetails.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.orderdetails.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderHistory")]
	public partial class OrderHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _history_id;
		
		private System.Nullable<int> _order_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _admin_id;
		
		private int _training_hours;
		
		private decimal _total_price;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private string _status;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhistory_idChanging(int value);
    partial void Onhistory_idChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onadmin_idChanging(System.Nullable<int> value);
    partial void Onadmin_idChanged();
    partial void Ontraining_hoursChanging(int value);
    partial void Ontraining_hoursChanged();
    partial void Ontotal_priceChanging(decimal value);
    partial void Ontotal_priceChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public OrderHistory()
		{
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_history_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int history_id
		{
			get
			{
				return this._history_id;
			}
			set
			{
				if ((this._history_id != value))
				{
					this.Onhistory_idChanging(value);
					this.SendPropertyChanging();
					this._history_id = value;
					this.SendPropertyChanged("history_id");
					this.Onhistory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
		public System.Nullable<int> order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="Int")]
		public System.Nullable<int> admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_hours", DbType="Int NOT NULL")]
		public int training_hours
		{
			get
			{
				return this._training_hours;
			}
			set
			{
				if ((this._training_hours != value))
				{
					this.Ontraining_hoursChanging(value);
					this.SendPropertyChanging();
					this._training_hours = value;
					this.SendPropertyChanged("training_hours");
					this.Ontraining_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_OrderHistory", Storage="_admin", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.OrderHistories.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.OrderHistories.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_OrderHistory", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.OrderHistories.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.OrderHistories.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_OrderHistory", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.OrderHistories.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.OrderHistories.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<bool> _is_paid;
		
		private System.Nullable<bool> _is_done;
		
		private System.Nullable<bool> _is_shipped;
		
		private System.Nullable<System.DateTime> _training_date;
		
		private System.Nullable<decimal> _total_amount;
		
		private EntitySet<orderdetail> _orderdetails;
		
		private EntitySet<OrderHistory> _OrderHistories;
		
		private EntitySet<TrainingSession> _TrainingSessions;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onis_paidChanging(System.Nullable<bool> value);
    partial void Onis_paidChanged();
    partial void Onis_doneChanging(System.Nullable<bool> value);
    partial void Onis_doneChanged();
    partial void Onis_shippedChanging(System.Nullable<bool> value);
    partial void Onis_shippedChanged();
    partial void Ontraining_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontraining_dateChanged();
    partial void Ontotal_amountChanging(System.Nullable<decimal> value);
    partial void Ontotal_amountChanged();
    #endregion
		
		public order()
		{
			this._orderdetails = new EntitySet<orderdetail>(new Action<orderdetail>(this.attach_orderdetails), new Action<orderdetail>(this.detach_orderdetails));
			this._OrderHistories = new EntitySet<OrderHistory>(new Action<OrderHistory>(this.attach_OrderHistories), new Action<OrderHistory>(this.detach_OrderHistories));
			this._TrainingSessions = new EntitySet<TrainingSession>(new Action<TrainingSession>(this.attach_TrainingSessions), new Action<TrainingSession>(this.detach_TrainingSessions));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit")]
		public System.Nullable<bool> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_done", DbType="Bit")]
		public System.Nullable<bool> is_done
		{
			get
			{
				return this._is_done;
			}
			set
			{
				if ((this._is_done != value))
				{
					this.Onis_doneChanging(value);
					this.SendPropertyChanging();
					this._is_done = value;
					this.SendPropertyChanged("is_done");
					this.Onis_doneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_shipped", DbType="Bit")]
		public System.Nullable<bool> is_shipped
		{
			get
			{
				return this._is_shipped;
			}
			set
			{
				if ((this._is_shipped != value))
				{
					this.Onis_shippedChanging(value);
					this.SendPropertyChanging();
					this._is_shipped = value;
					this.SendPropertyChanged("is_shipped");
					this.Onis_shippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> training_date
		{
			get
			{
				return this._training_date;
			}
			set
			{
				if ((this._training_date != value))
				{
					this.Ontraining_dateChanging(value);
					this.SendPropertyChanging();
					this._training_date = value;
					this.SendPropertyChanged("training_date");
					this.Ontraining_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_orderdetails", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<orderdetail> orderdetails
		{
			get
			{
				return this._orderdetails;
			}
			set
			{
				this._orderdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_OrderHistory", Storage="_OrderHistories", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<OrderHistory> OrderHistories
		{
			get
			{
				return this._OrderHistories;
			}
			set
			{
				this._OrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_TrainingSession", Storage="_TrainingSessions", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<TrainingSession> TrainingSessions
		{
			get
			{
				return this._TrainingSessions;
			}
			set
			{
				this._TrainingSessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_OrderHistories(OrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.publisher")]
	public partial class publisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _publisher_id;
		
		private string _publisher_name;
		
		private EntitySet<skin> _skins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpublisher_idChanging(int value);
    partial void Onpublisher_idChanged();
    partial void Onpublisher_nameChanging(string value);
    partial void Onpublisher_nameChanged();
    #endregion
		
		public publisher()
		{
			this._skins = new EntitySet<skin>(new Action<skin>(this.attach_skins), new Action<skin>(this.detach_skins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int publisher_id
		{
			get
			{
				return this._publisher_id;
			}
			set
			{
				if ((this._publisher_id != value))
				{
					this.Onpublisher_idChanging(value);
					this.SendPropertyChanging();
					this._publisher_id = value;
					this.SendPropertyChanged("publisher_id");
					this.Onpublisher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string publisher_name
		{
			get
			{
				return this._publisher_name;
			}
			set
			{
				if ((this._publisher_name != value))
				{
					this.Onpublisher_nameChanging(value);
					this.SendPropertyChanging();
					this._publisher_name = value;
					this.SendPropertyChanged("publisher_name");
					this.Onpublisher_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_skin", Storage="_skins", ThisKey="publisher_id", OtherKey="publisher_id")]
		public EntitySet<skin> skins
		{
			get
			{
				return this._skins;
			}
			set
			{
				this._skins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_skins(skin entity)
		{
			this.SendPropertyChanging();
			entity.publisher = this;
		}
		
		private void detach_skins(skin entity)
		{
			this.SendPropertyChanging();
			entity.publisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skins")]
	public partial class skin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _skin_id;
		
		private string _skin_name;
		
		private string _image;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _quantity_instock;
		
		private System.Nullable<int> _publisher_id;
		
		private string _skin_description;
		
		private EntityRef<publisher> _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onskin_idChanging(int value);
    partial void Onskin_idChanged();
    partial void Onskin_nameChanging(string value);
    partial void Onskin_nameChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onquantity_instockChanging(System.Nullable<int> value);
    partial void Onquantity_instockChanged();
    partial void Onpublisher_idChanging(System.Nullable<int> value);
    partial void Onpublisher_idChanged();
    partial void Onskin_descriptionChanging(string value);
    partial void Onskin_descriptionChanged();
    #endregion
		
		public skin()
		{
			this._publisher = default(EntityRef<publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skin_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int skin_id
		{
			get
			{
				return this._skin_id;
			}
			set
			{
				if ((this._skin_id != value))
				{
					this.Onskin_idChanging(value);
					this.SendPropertyChanging();
					this._skin_id = value;
					this.SendPropertyChanged("skin_id");
					this.Onskin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skin_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string skin_name
		{
			get
			{
				return this._skin_name;
			}
			set
			{
				if ((this._skin_name != value))
				{
					this.Onskin_nameChanging(value);
					this.SendPropertyChanging();
					this._skin_name = value;
					this.SendPropertyChanged("skin_name");
					this.Onskin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_instock", DbType="Int")]
		public System.Nullable<int> quantity_instock
		{
			get
			{
				return this._quantity_instock;
			}
			set
			{
				if ((this._quantity_instock != value))
				{
					this.Onquantity_instockChanging(value);
					this.SendPropertyChanging();
					this._quantity_instock = value;
					this.SendPropertyChanged("quantity_instock");
					this.Onquantity_instockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher_id", DbType="Int")]
		public System.Nullable<int> publisher_id
		{
			get
			{
				return this._publisher_id;
			}
			set
			{
				if ((this._publisher_id != value))
				{
					if (this._publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpublisher_idChanging(value);
					this.SendPropertyChanging();
					this._publisher_id = value;
					this.SendPropertyChanged("publisher_id");
					this.Onpublisher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skin_description", DbType="NVarChar(MAX)")]
		public string skin_description
		{
			get
			{
				return this._skin_description;
			}
			set
			{
				if ((this._skin_description != value))
				{
					this.Onskin_descriptionChanging(value);
					this.SendPropertyChanging();
					this._skin_description = value;
					this.SendPropertyChanged("skin_description");
					this.Onskin_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_skin", Storage="_publisher", ThisKey="publisher_id", OtherKey="publisher_id", IsForeignKey=true)]
		public publisher publisher
		{
			get
			{
				return this._publisher.Entity;
			}
			set
			{
				publisher previousValue = this._publisher.Entity;
				if (((previousValue != value) 
							|| (this._publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publisher.Entity = null;
						previousValue.skins.Remove(this);
					}
					this._publisher.Entity = value;
					if ((value != null))
					{
						value.skins.Add(this);
						this._publisher_id = value.publisher_id;
					}
					else
					{
						this._publisher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reviews")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _review_id;
		
		private System.Nullable<int> _customer_id;
		
		private string _title;
		
		private System.Nullable<int> _rating;
		
		private string _review_text;
		
		private System.Nullable<System.DateTime> _review_date;
		
		private EntitySet<comment> _comments;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_idChanging(int value);
    partial void Onreview_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnratingChanging(System.Nullable<int> value);
    partial void OnratingChanged();
    partial void Onreview_textChanging(string value);
    partial void Onreview_textChanged();
    partial void Onreview_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreview_dateChanged();
    #endregion
		
		public review()
		{
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int")]
		public System.Nullable<int> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_text", DbType="NVarChar(500)")]
		public string review_text
		{
			get
			{
				return this._review_text;
			}
			set
			{
				if ((this._review_text != value))
				{
					this.Onreview_textChanging(value);
					this.SendPropertyChanging();
					this._review_text = value;
					this.SendPropertyChanged("review_text");
					this.Onreview_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> review_date
		{
			get
			{
				return this._review_date;
			}
			set
			{
				if ((this._review_date != value))
				{
					this.Onreview_dateChanging(value);
					this.SendPropertyChanging();
					this._review_date = value;
					this.SendPropertyChanged("review_date");
					this.Onreview_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_comment", Storage="_comments", ThisKey="review_id", OtherKey="review_id")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_review", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.review = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.review = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.talk")]
	public partial class talk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _talk_id;
		
		private int _sender_id;
		
		private int _receiver_id;
		
		private string _sender_type;
		
		private string _receiver_type;
		
		private string _message_text;
		
		private System.Nullable<System.DateTime> _sent_at;
		
		private System.Nullable<bool> _is_read;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontalk_idChanging(int value);
    partial void Ontalk_idChanged();
    partial void Onsender_idChanging(int value);
    partial void Onsender_idChanged();
    partial void Onreceiver_idChanging(int value);
    partial void Onreceiver_idChanged();
    partial void Onsender_typeChanging(string value);
    partial void Onsender_typeChanged();
    partial void Onreceiver_typeChanging(string value);
    partial void Onreceiver_typeChanged();
    partial void Onmessage_textChanging(string value);
    partial void Onmessage_textChanged();
    partial void Onsent_atChanging(System.Nullable<System.DateTime> value);
    partial void Onsent_atChanged();
    partial void Onis_readChanging(System.Nullable<bool> value);
    partial void Onis_readChanged();
    #endregion
		
		public talk()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_talk_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int talk_id
		{
			get
			{
				return this._talk_id;
			}
			set
			{
				if ((this._talk_id != value))
				{
					this.Ontalk_idChanging(value);
					this.SendPropertyChanging();
					this._talk_id = value;
					this.SendPropertyChanged("talk_id");
					this.Ontalk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_id", DbType="Int NOT NULL")]
		public int sender_id
		{
			get
			{
				return this._sender_id;
			}
			set
			{
				if ((this._sender_id != value))
				{
					this.Onsender_idChanging(value);
					this.SendPropertyChanging();
					this._sender_id = value;
					this.SendPropertyChanged("sender_id");
					this.Onsender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_id", DbType="Int NOT NULL")]
		public int receiver_id
		{
			get
			{
				return this._receiver_id;
			}
			set
			{
				if ((this._receiver_id != value))
				{
					this.Onreceiver_idChanging(value);
					this.SendPropertyChanging();
					this._receiver_id = value;
					this.SendPropertyChanged("receiver_id");
					this.Onreceiver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_type", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string sender_type
		{
			get
			{
				return this._sender_type;
			}
			set
			{
				if ((this._sender_type != value))
				{
					this.Onsender_typeChanging(value);
					this.SendPropertyChanging();
					this._sender_type = value;
					this.SendPropertyChanged("sender_type");
					this.Onsender_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_type", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string receiver_type
		{
			get
			{
				return this._receiver_type;
			}
			set
			{
				if ((this._receiver_type != value))
				{
					this.Onreceiver_typeChanging(value);
					this.SendPropertyChanging();
					this._receiver_type = value;
					this.SendPropertyChanged("receiver_type");
					this.Onreceiver_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string message_text
		{
			get
			{
				return this._message_text;
			}
			set
			{
				if ((this._message_text != value))
				{
					this.Onmessage_textChanging(value);
					this.SendPropertyChanging();
					this._message_text = value;
					this.SendPropertyChanged("message_text");
					this.Onmessage_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> sent_at
		{
			get
			{
				return this._sent_at;
			}
			set
			{
				if ((this._sent_at != value))
				{
					this.Onsent_atChanging(value);
					this.SendPropertyChanging();
					this._sent_at = value;
					this.SendPropertyChanged("sent_at");
					this.Onsent_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_read", DbType="Bit")]
		public System.Nullable<bool> is_read
		{
			get
			{
				return this._is_read;
			}
			set
			{
				if ((this._is_read != value))
				{
					this.Onis_readChanging(value);
					this.SendPropertyChanging();
					this._is_read = value;
					this.SendPropertyChanged("is_read");
					this.Onis_readChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.teams")]
	public partial class team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _team_id;
		
		private string _team_name;
		
		private string _team_logo;
		
		private int _vote_count;
		
		private System.Nullable<decimal> _win_rate;
		
		private EntitySet<tournament_team> _tournament_teams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteam_idChanging(int value);
    partial void Onteam_idChanged();
    partial void Onteam_nameChanging(string value);
    partial void Onteam_nameChanged();
    partial void Onteam_logoChanging(string value);
    partial void Onteam_logoChanged();
    partial void Onvote_countChanging(int value);
    partial void Onvote_countChanged();
    partial void Onwin_rateChanging(System.Nullable<decimal> value);
    partial void Onwin_rateChanged();
    #endregion
		
		public team()
		{
			this._tournament_teams = new EntitySet<tournament_team>(new Action<tournament_team>(this.attach_tournament_teams), new Action<tournament_team>(this.detach_tournament_teams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string team_name
		{
			get
			{
				return this._team_name;
			}
			set
			{
				if ((this._team_name != value))
				{
					this.Onteam_nameChanging(value);
					this.SendPropertyChanging();
					this._team_name = value;
					this.SendPropertyChanged("team_name");
					this.Onteam_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_logo", DbType="NVarChar(500)")]
		public string team_logo
		{
			get
			{
				return this._team_logo;
			}
			set
			{
				if ((this._team_logo != value))
				{
					this.Onteam_logoChanging(value);
					this.SendPropertyChanging();
					this._team_logo = value;
					this.SendPropertyChanged("team_logo");
					this.Onteam_logoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_count", DbType="Int NOT NULL")]
		public int vote_count
		{
			get
			{
				return this._vote_count;
			}
			set
			{
				if ((this._vote_count != value))
				{
					this.Onvote_countChanging(value);
					this.SendPropertyChanging();
					this._vote_count = value;
					this.SendPropertyChanged("vote_count");
					this.Onvote_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win_rate", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> win_rate
		{
			get
			{
				return this._win_rate;
			}
			set
			{
				if ((this._win_rate != value))
				{
					this.Onwin_rateChanging(value);
					this.SendPropertyChanging();
					this._win_rate = value;
					this.SendPropertyChanged("win_rate");
					this.Onwin_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_tournament_team", Storage="_tournament_teams", ThisKey="team_id", OtherKey="team_id")]
		public EntitySet<tournament_team> tournament_teams
		{
			get
			{
				return this._tournament_teams;
			}
			set
			{
				this._tournament_teams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tournament_teams(tournament_team entity)
		{
			this.SendPropertyChanging();
			entity.team = this;
		}
		
		private void detach_tournament_teams(tournament_team entity)
		{
			this.SendPropertyChanging();
			entity.team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tournament")]
	public partial class tournament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tournament_id;
		
		private string _tournament_name;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private decimal _prize_pool;
		
		private string _location;
		
		private string _status;
		
		private string _winner_team;
		
		private EntitySet<tournament_team> _tournament_teams;
		
		private EntitySet<tournament_vote> _tournament_votes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontournament_idChanging(int value);
    partial void Ontournament_idChanged();
    partial void Ontournament_nameChanging(string value);
    partial void Ontournament_nameChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void Onprize_poolChanging(decimal value);
    partial void Onprize_poolChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onwinner_teamChanging(string value);
    partial void Onwinner_teamChanged();
    #endregion
		
		public tournament()
		{
			this._tournament_teams = new EntitySet<tournament_team>(new Action<tournament_team>(this.attach_tournament_teams), new Action<tournament_team>(this.detach_tournament_teams));
			this._tournament_votes = new EntitySet<tournament_vote>(new Action<tournament_vote>(this.attach_tournament_votes), new Action<tournament_vote>(this.detach_tournament_votes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tournament_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tournament_id
		{
			get
			{
				return this._tournament_id;
			}
			set
			{
				if ((this._tournament_id != value))
				{
					this.Ontournament_idChanging(value);
					this.SendPropertyChanging();
					this._tournament_id = value;
					this.SendPropertyChanged("tournament_id");
					this.Ontournament_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tournament_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tournament_name
		{
			get
			{
				return this._tournament_name;
			}
			set
			{
				if ((this._tournament_name != value))
				{
					this.Ontournament_nameChanging(value);
					this.SendPropertyChanging();
					this._tournament_name = value;
					this.SendPropertyChanged("tournament_name");
					this.Ontournament_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="DateTime NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prize_pool", DbType="Decimal(18,2) NOT NULL")]
		public decimal prize_pool
		{
			get
			{
				return this._prize_pool;
			}
			set
			{
				if ((this._prize_pool != value))
				{
					this.Onprize_poolChanging(value);
					this.SendPropertyChanging();
					this._prize_pool = value;
					this.SendPropertyChanged("prize_pool");
					this.Onprize_poolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(255)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winner_team", DbType="NVarChar(255)")]
		public string winner_team
		{
			get
			{
				return this._winner_team;
			}
			set
			{
				if ((this._winner_team != value))
				{
					this.Onwinner_teamChanging(value);
					this.SendPropertyChanging();
					this._winner_team = value;
					this.SendPropertyChanged("winner_team");
					this.Onwinner_teamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tournament_tournament_team", Storage="_tournament_teams", ThisKey="tournament_id", OtherKey="tournament_id")]
		public EntitySet<tournament_team> tournament_teams
		{
			get
			{
				return this._tournament_teams;
			}
			set
			{
				this._tournament_teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tournament_tournament_vote", Storage="_tournament_votes", ThisKey="tournament_id", OtherKey="tournament_id")]
		public EntitySet<tournament_vote> tournament_votes
		{
			get
			{
				return this._tournament_votes;
			}
			set
			{
				this._tournament_votes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tournament_teams(tournament_team entity)
		{
			this.SendPropertyChanging();
			entity.tournament = this;
		}
		
		private void detach_tournament_teams(tournament_team entity)
		{
			this.SendPropertyChanging();
			entity.tournament = null;
		}
		
		private void attach_tournament_votes(tournament_vote entity)
		{
			this.SendPropertyChanging();
			entity.tournament = this;
		}
		
		private void detach_tournament_votes(tournament_vote entity)
		{
			this.SendPropertyChanging();
			entity.tournament = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tournament_teams")]
	public partial class tournament_team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tournament_id;
		
		private int _team_id;
		
		private System.Nullable<char> _group_name;
		
		private EntityRef<team> _team;
		
		private EntityRef<tournament> _tournament;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontournament_idChanging(int value);
    partial void Ontournament_idChanged();
    partial void Onteam_idChanging(int value);
    partial void Onteam_idChanged();
    partial void Ongroup_nameChanging(System.Nullable<char> value);
    partial void Ongroup_nameChanged();
    #endregion
		
		public tournament_team()
		{
			this._team = default(EntityRef<team>);
			this._tournament = default(EntityRef<tournament>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tournament_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tournament_id
		{
			get
			{
				return this._tournament_id;
			}
			set
			{
				if ((this._tournament_id != value))
				{
					if (this._tournament.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontournament_idChanging(value);
					this.SendPropertyChanging();
					this._tournament_id = value;
					this.SendPropertyChanged("tournament_id");
					this.Ontournament_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					if (this._team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_name", DbType="Char(1)")]
		public System.Nullable<char> group_name
		{
			get
			{
				return this._group_name;
			}
			set
			{
				if ((this._group_name != value))
				{
					this.Ongroup_nameChanging(value);
					this.SendPropertyChanging();
					this._group_name = value;
					this.SendPropertyChanged("group_name");
					this.Ongroup_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="team_tournament_team", Storage="_team", ThisKey="team_id", OtherKey="team_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public team team
		{
			get
			{
				return this._team.Entity;
			}
			set
			{
				team previousValue = this._team.Entity;
				if (((previousValue != value) 
							|| (this._team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._team.Entity = null;
						previousValue.tournament_teams.Remove(this);
					}
					this._team.Entity = value;
					if ((value != null))
					{
						value.tournament_teams.Add(this);
						this._team_id = value.team_id;
					}
					else
					{
						this._team_id = default(int);
					}
					this.SendPropertyChanged("team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tournament_tournament_team", Storage="_tournament", ThisKey="tournament_id", OtherKey="tournament_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tournament tournament
		{
			get
			{
				return this._tournament.Entity;
			}
			set
			{
				tournament previousValue = this._tournament.Entity;
				if (((previousValue != value) 
							|| (this._tournament.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tournament.Entity = null;
						previousValue.tournament_teams.Remove(this);
					}
					this._tournament.Entity = value;
					if ((value != null))
					{
						value.tournament_teams.Add(this);
						this._tournament_id = value.tournament_id;
					}
					else
					{
						this._tournament_id = default(int);
					}
					this.SendPropertyChanged("tournament");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tournament_votes")]
	public partial class tournament_vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vote_id;
		
		private int _tournament_id;
		
		private int _customer_id;
		
		private string _voted_team;
		
		private System.Nullable<System.DateTime> _vote_date;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<tournament> _tournament;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvote_idChanging(int value);
    partial void Onvote_idChanged();
    partial void Ontournament_idChanging(int value);
    partial void Ontournament_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onvoted_teamChanging(string value);
    partial void Onvoted_teamChanged();
    partial void Onvote_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onvote_dateChanged();
    #endregion
		
		public tournament_vote()
		{
			this._customer = default(EntityRef<customer>);
			this._tournament = default(EntityRef<tournament>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vote_id
		{
			get
			{
				return this._vote_id;
			}
			set
			{
				if ((this._vote_id != value))
				{
					this.Onvote_idChanging(value);
					this.SendPropertyChanging();
					this._vote_id = value;
					this.SendPropertyChanged("vote_id");
					this.Onvote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tournament_id", DbType="Int NOT NULL")]
		public int tournament_id
		{
			get
			{
				return this._tournament_id;
			}
			set
			{
				if ((this._tournament_id != value))
				{
					if (this._tournament.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontournament_idChanging(value);
					this.SendPropertyChanging();
					this._tournament_id = value;
					this.SendPropertyChanged("tournament_id");
					this.Ontournament_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voted_team", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string voted_team
		{
			get
			{
				return this._voted_team;
			}
			set
			{
				if ((this._voted_team != value))
				{
					this.Onvoted_teamChanging(value);
					this.SendPropertyChanging();
					this._voted_team = value;
					this.SendPropertyChanged("voted_team");
					this.Onvoted_teamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> vote_date
		{
			get
			{
				return this._vote_date;
			}
			set
			{
				if ((this._vote_date != value))
				{
					this.Onvote_dateChanging(value);
					this.SendPropertyChanging();
					this._vote_date = value;
					this.SendPropertyChanged("vote_date");
					this.Onvote_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_tournament_vote", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.tournament_votes.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.tournament_votes.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tournament_tournament_vote", Storage="_tournament", ThisKey="tournament_id", OtherKey="tournament_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tournament tournament
		{
			get
			{
				return this._tournament.Entity;
			}
			set
			{
				tournament previousValue = this._tournament.Entity;
				if (((previousValue != value) 
							|| (this._tournament.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tournament.Entity = null;
						previousValue.tournament_votes.Remove(this);
					}
					this._tournament.Entity = value;
					if ((value != null))
					{
						value.tournament_votes.Add(this);
						this._tournament_id = value.tournament_id;
					}
					else
					{
						this._tournament_id = default(int);
					}
					this.SendPropertyChanged("tournament");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrainingOrders")]
	public partial class TrainingOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _admin_id;
		
		private int _customer_id;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<bool> _is_order_completed;
		
		private System.Nullable<bool> _is_paid;
		
		private System.Nullable<System.DateTime> _training_start_time;
		
		private System.Nullable<System.DateTime> _training_end_time;
		
		private System.Nullable<decimal> _total_amount;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onadmin_idChanging(int value);
    partial void Onadmin_idChanged();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void Onis_order_completedChanging(System.Nullable<bool> value);
    partial void Onis_order_completedChanged();
    partial void Onis_paidChanging(System.Nullable<bool> value);
    partial void Onis_paidChanged();
    partial void Ontraining_start_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontraining_start_timeChanged();
    partial void Ontraining_end_timeChanging(System.Nullable<System.DateTime> value);
    partial void Ontraining_end_timeChanged();
    partial void Ontotal_amountChanging(System.Nullable<decimal> value);
    partial void Ontotal_amountChanged();
    #endregion
		
		public TrainingOrder()
		{
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="Int NOT NULL")]
		public int admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int NOT NULL")]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_order_completed", DbType="Bit")]
		public System.Nullable<bool> is_order_completed
		{
			get
			{
				return this._is_order_completed;
			}
			set
			{
				if ((this._is_order_completed != value))
				{
					this.Onis_order_completedChanging(value);
					this.SendPropertyChanging();
					this._is_order_completed = value;
					this.SendPropertyChanged("is_order_completed");
					this.Onis_order_completedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit")]
		public System.Nullable<bool> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_start_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> training_start_time
		{
			get
			{
				return this._training_start_time;
			}
			set
			{
				if ((this._training_start_time != value))
				{
					this.Ontraining_start_timeChanging(value);
					this.SendPropertyChanging();
					this._training_start_time = value;
					this.SendPropertyChanged("training_start_time");
					this.Ontraining_start_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_end_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> training_end_time
		{
			get
			{
				return this._training_end_time;
			}
			set
			{
				if ((this._training_end_time != value))
				{
					this.Ontraining_end_timeChanging(value);
					this.SendPropertyChanging();
					this._training_end_time = value;
					this.SendPropertyChanged("training_end_time");
					this.Ontraining_end_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_TrainingOrder", Storage="_admin", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.TrainingOrders.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.TrainingOrders.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(int);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_TrainingOrder", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.TrainingOrders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.TrainingOrders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrainingRooms")]
	public partial class TrainingRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _room_id;
		
		private string _room_name;
		
		private System.Nullable<bool> _is_available;
		
		private string _room_code;
		
		private EntitySet<TrainingSession> _TrainingSessions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onroom_idChanging(int value);
    partial void Onroom_idChanged();
    partial void Onroom_nameChanging(string value);
    partial void Onroom_nameChanged();
    partial void Onis_availableChanging(System.Nullable<bool> value);
    partial void Onis_availableChanged();
    partial void Onroom_codeChanging(string value);
    partial void Onroom_codeChanged();
    #endregion
		
		public TrainingRoom()
		{
			this._TrainingSessions = new EntitySet<TrainingSession>(new Action<TrainingSession>(this.attach_TrainingSessions), new Action<TrainingSession>(this.detach_TrainingSessions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int room_id
		{
			get
			{
				return this._room_id;
			}
			set
			{
				if ((this._room_id != value))
				{
					this.Onroom_idChanging(value);
					this.SendPropertyChanging();
					this._room_id = value;
					this.SendPropertyChanged("room_id");
					this.Onroom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string room_name
		{
			get
			{
				return this._room_name;
			}
			set
			{
				if ((this._room_name != value))
				{
					this.Onroom_nameChanging(value);
					this.SendPropertyChanging();
					this._room_name = value;
					this.SendPropertyChanged("room_name");
					this.Onroom_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_available", DbType="Bit")]
		public System.Nullable<bool> is_available
		{
			get
			{
				return this._is_available;
			}
			set
			{
				if ((this._is_available != value))
				{
					this.Onis_availableChanging(value);
					this.SendPropertyChanging();
					this._is_available = value;
					this.SendPropertyChanged("is_available");
					this.Onis_availableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_code", DbType="VarChar(10)")]
		public string room_code
		{
			get
			{
				return this._room_code;
			}
			set
			{
				if ((this._room_code != value))
				{
					this.Onroom_codeChanging(value);
					this.SendPropertyChanging();
					this._room_code = value;
					this.SendPropertyChanged("room_code");
					this.Onroom_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrainingRoom_TrainingSession", Storage="_TrainingSessions", ThisKey="room_id", OtherKey="room_id")]
		public EntitySet<TrainingSession> TrainingSessions
		{
			get
			{
				return this._TrainingSessions;
			}
			set
			{
				this._TrainingSessions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.TrainingRoom = this;
		}
		
		private void detach_TrainingSessions(TrainingSession entity)
		{
			this.SendPropertyChanging();
			entity.TrainingRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrainingSessions")]
	public partial class TrainingSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _session_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<int> _admin_id;
		
		private System.Nullable<int> _order_id;
		
		private System.Nullable<int> _room_id;
		
		private System.DateTime _session_date;
		
		private string _session_code;
		
		private string _status;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<order> _order;
		
		private EntityRef<TrainingRoom> _TrainingRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsession_idChanging(int value);
    partial void Onsession_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onadmin_idChanging(System.Nullable<int> value);
    partial void Onadmin_idChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    partial void Onroom_idChanging(System.Nullable<int> value);
    partial void Onroom_idChanged();
    partial void Onsession_dateChanging(System.DateTime value);
    partial void Onsession_dateChanged();
    partial void Onsession_codeChanging(string value);
    partial void Onsession_codeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public TrainingSession()
		{
			this._admin = default(EntityRef<admin>);
			this._customer = default(EntityRef<customer>);
			this._order = default(EntityRef<order>);
			this._TrainingRoom = default(EntityRef<TrainingRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="Int")]
		public System.Nullable<int> admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
		public System.Nullable<int> order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_id", DbType="Int")]
		public System.Nullable<int> room_id
		{
			get
			{
				return this._room_id;
			}
			set
			{
				if ((this._room_id != value))
				{
					if (this._TrainingRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroom_idChanging(value);
					this.SendPropertyChanging();
					this._room_id = value;
					this.SendPropertyChanged("room_id");
					this.Onroom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_date", DbType="DateTime NOT NULL")]
		public System.DateTime session_date
		{
			get
			{
				return this._session_date;
			}
			set
			{
				if ((this._session_date != value))
				{
					this.Onsession_dateChanging(value);
					this.SendPropertyChanging();
					this._session_date = value;
					this.SendPropertyChanged("session_date");
					this.Onsession_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_code", DbType="VarChar(10)")]
		public string session_code
		{
			get
			{
				return this._session_code;
			}
			set
			{
				if ((this._session_code != value))
				{
					this.Onsession_codeChanging(value);
					this.SendPropertyChanging();
					this._session_code = value;
					this.SendPropertyChanged("session_code");
					this.Onsession_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_TrainingSession", Storage="_admin", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.TrainingSessions.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.TrainingSessions.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_TrainingSession", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.TrainingSessions.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.TrainingSessions.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_TrainingSession", Storage="_order", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.TrainingSessions.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.TrainingSessions.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrainingRoom_TrainingSession", Storage="_TrainingRoom", ThisKey="room_id", OtherKey="room_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public TrainingRoom TrainingRoom
		{
			get
			{
				return this._TrainingRoom.Entity;
			}
			set
			{
				TrainingRoom previousValue = this._TrainingRoom.Entity;
				if (((previousValue != value) 
							|| (this._TrainingRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrainingRoom.Entity = null;
						previousValue.TrainingSessions.Remove(this);
					}
					this._TrainingRoom.Entity = value;
					if ((value != null))
					{
						value.TrainingSessions.Add(this);
						this._room_id = value.room_id;
					}
					else
					{
						this._room_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrainingRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.weapons")]
	public partial class weapon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _weapon_id;
		
		private string _weapon_name;
		
		private string _category;
		
		private int _price;
		
		private int _damage;
		
		private System.Nullable<decimal> _fire_rate;
		
		private System.Nullable<decimal> _recoil;
		
		private System.Nullable<int> _magazine_size;
		
		private System.Nullable<decimal> _penetration_power;
		
		private string _image_url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onweapon_idChanging(int value);
    partial void Onweapon_idChanged();
    partial void Onweapon_nameChanging(string value);
    partial void Onweapon_nameChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OndamageChanging(int value);
    partial void OndamageChanged();
    partial void Onfire_rateChanging(System.Nullable<decimal> value);
    partial void Onfire_rateChanged();
    partial void OnrecoilChanging(System.Nullable<decimal> value);
    partial void OnrecoilChanged();
    partial void Onmagazine_sizeChanging(System.Nullable<int> value);
    partial void Onmagazine_sizeChanged();
    partial void Onpenetration_powerChanging(System.Nullable<decimal> value);
    partial void Onpenetration_powerChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    #endregion
		
		public weapon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weapon_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int weapon_id
		{
			get
			{
				return this._weapon_id;
			}
			set
			{
				if ((this._weapon_id != value))
				{
					this.Onweapon_idChanging(value);
					this.SendPropertyChanging();
					this._weapon_id = value;
					this.SendPropertyChanged("weapon_id");
					this.Onweapon_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weapon_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string weapon_name
		{
			get
			{
				return this._weapon_name;
			}
			set
			{
				if ((this._weapon_name != value))
				{
					this.Onweapon_nameChanging(value);
					this.SendPropertyChanging();
					this._weapon_name = value;
					this.SendPropertyChanged("weapon_name");
					this.Onweapon_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_damage", DbType="Int NOT NULL")]
		public int damage
		{
			get
			{
				return this._damage;
			}
			set
			{
				if ((this._damage != value))
				{
					this.OndamageChanging(value);
					this.SendPropertyChanging();
					this._damage = value;
					this.SendPropertyChanged("damage");
					this.OndamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fire_rate", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> fire_rate
		{
			get
			{
				return this._fire_rate;
			}
			set
			{
				if ((this._fire_rate != value))
				{
					this.Onfire_rateChanging(value);
					this.SendPropertyChanging();
					this._fire_rate = value;
					this.SendPropertyChanged("fire_rate");
					this.Onfire_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recoil", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> recoil
		{
			get
			{
				return this._recoil;
			}
			set
			{
				if ((this._recoil != value))
				{
					this.OnrecoilChanging(value);
					this.SendPropertyChanging();
					this._recoil = value;
					this.SendPropertyChanged("recoil");
					this.OnrecoilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magazine_size", DbType="Int")]
		public System.Nullable<int> magazine_size
		{
			get
			{
				return this._magazine_size;
			}
			set
			{
				if ((this._magazine_size != value))
				{
					this.Onmagazine_sizeChanging(value);
					this.SendPropertyChanging();
					this._magazine_size = value;
					this.SendPropertyChanged("magazine_size");
					this.Onmagazine_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_penetration_power", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> penetration_power
		{
			get
			{
				return this._penetration_power;
			}
			set
			{
				if ((this._penetration_power != value))
				{
					this.Onpenetration_powerChanging(value);
					this.SendPropertyChanging();
					this._penetration_power = value;
					this.SendPropertyChanged("penetration_power");
					this.Onpenetration_powerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_url", DbType="VarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
